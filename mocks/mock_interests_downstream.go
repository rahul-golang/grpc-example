// Code generated by MockGen. DO NOT EDIT.
// Source: downstream/interests_downstream.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "interview/models"
	reflect "reflect"
)

// MockInterestsDownStream is a mock of InterestsDownStream interface
type MockInterestsDownStream struct {
	ctrl     *gomock.Controller
	recorder *MockInterestsDownStreamMockRecorder
}

// MockInterestsDownStreamMockRecorder is the mock recorder for MockInterestsDownStream
type MockInterestsDownStreamMockRecorder struct {
	mock *MockInterestsDownStream
}

// NewMockInterestsDownStream creates a new mock instance
func NewMockInterestsDownStream(ctrl *gomock.Controller) *MockInterestsDownStream {
	mock := &MockInterestsDownStream{ctrl: ctrl}
	mock.recorder = &MockInterestsDownStreamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterestsDownStream) EXPECT() *MockInterestsDownStreamMockRecorder {
	return m.recorder
}

// ExecuteInterestsRequest mocks base method
func (m *MockInterestsDownStream) ExecuteInterestsRequest(ctx context.Context, key1, key2 int64) (models.Interests, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecuteInterestsRequest", ctx, key1, key2)
	ret0, _ := ret[0].(models.Interests)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExecuteInterestsRequest indicates an expected call of ExecuteInterestsRequest
func (mr *MockInterestsDownStreamMockRecorder) ExecuteInterestsRequest(ctx, key1, key2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecuteInterestsRequest", reflect.TypeOf((*MockInterestsDownStream)(nil).ExecuteInterestsRequest), ctx, key1, key2)
}
